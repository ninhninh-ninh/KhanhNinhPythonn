import json
import os


def doc_file(ten_file):
    """ƒê·ªçc d·ªØ li·ªáu t·ª´ file JSON, n·∫øu kh√¥ng c√≥ th√¨ kh·ªüi t·∫°o d·ªØ li·ªáu tr·ªëng."""
    if not os.path.exists(ten_file):
        return {"mon_an": {}, "thuc_don": {}}
    try:
        with open(ten_file, 'r', encoding='utf-8') as f:
            du_lieu = json.load(f)
            
            if "mon_an" not in du_lieu:
                du_lieu["mon_an"] = {}
            if "thuc_don" not in du_lieu:
                du_lieu["thuc_don"] = {}
            return du_lieu
    except:
        return {"mon_an": {}, "thuc_don": {}}


def ghi_file(ten_file, du_lieu):
    """Ghi d·ªØ li·ªáu v√†o file JSON."""
    with open(ten_file, 'w', encoding='utf-8') as f:
        json.dump(du_lieu, f, indent=4, ensure_ascii=False)


def them_mon_an(data):
    """Th√™m m·ªôt m√≥n ƒÉn m·ªõi."""
    print("\n TH√äM M√ìN ƒÇN")
    ma = input("M√£ m√≥n (VD: MA001): ").strip().upper()
    if ma in data["mon_an"]:
        print(" M√≥n ƒë√£ t·ªìn t·∫°i.")
        return
    ten = input("T√™n m√≥n: ").strip()
    calo = int(input("L∆∞·ª£ng calo: "))
    loai = input("Lo·∫°i m√≥n (ƒê·∫°m/Tinh b·ªôt/Rau/...): ").strip()
    data["mon_an"][ma] = {"Ten": ten, "Calo": calo, "Loai": loai}
    print(" ƒê√£ th√™m m√≥n ƒÉn.")

def xem_mon_an(data):
    """Hi·ªÉn th·ªã danh s√°ch m√≥n ƒÉn."""
    print("\n DANH S√ÅCH M√ìN ƒÇN")
    if not data["mon_an"]:
        print("Ch∆∞a c√≥ m√≥n ƒÉn n√†o.")
        return
    for ma, mon in data["mon_an"].items():
        print(f"- {ma}: {mon['Ten']} | {mon['Calo']} calo | Lo·∫°i: {mon['Loai']}")

def sua_mon_an(data):
    """S·ª≠a th√¥ng tin m√≥n ƒÉn."""
    ma = input("M√£ m√≥n c·∫ßn s·ª≠a: ").strip().upper()
    if ma not in data["mon_an"]:
        print(" Kh√¥ng t√¨m th·∫•y m√≥n.")
        return
    ten = input("T√™n m·ªõi: ").strip()
    calo = int(input("Calo m·ªõi: "))
    loai = input("Lo·∫°i m·ªõi: ").strip()
    data["mon_an"][ma] = {"Ten": ten, "Calo": calo, "Loai": loai}
    print(" ƒê√£ s·ª≠a m√≥n.")

def xoa_mon_an(data):
    """Xo√° m·ªôt m√≥n ƒÉn."""
    ma = input("M√£ m√≥n c·∫ßn xo√°: ").strip().upper()
    if ma in data["mon_an"]:
        del data["mon_an"][ma]
        print(" ƒê√£ xo√° m√≥n.")
    else:
        print(" Kh√¥ng t√¨m th·∫•y m√≥n.")

def tim_mon_theo_ten(data):
    """T√¨m m√≥n theo t√™n."""
    tu_khoa = input("Nh·∫≠p t√™n m√≥n c·∫ßn t√¨m: ").strip().lower()
    ket_qua = [mon for mon in data["mon_an"].values() if tu_khoa in mon["Ten"].lower()]
    if not ket_qua:
        print(" Kh√¥ng t√¨m th·∫•y m√≥n n√†o.")
    else:
        for mon in ket_qua:
            print(f" {mon['Ten']} | {mon['Calo']} calo | {mon['Loai']}")

def tim_mon_theo_loai(data):
    """T√¨m m√≥n theo lo·∫°i."""
    loai = input("Nh·∫≠p lo·∫°i m√≥n: ").strip().lower()
    ket_qua = [mon for mon in data["mon_an"].values() if loai == mon["Loai"].lower()]
    if not ket_qua:
        print(" Kh√¥ng c√≥ m√≥n n√†o thu·ªôc lo·∫°i n√†y.")
    else:
        for mon in ket_qua:
            print(f" {mon['Ten']} | {mon['Calo']} calo")

def mon_it_calo_nhat(data):
    """T√¨m m√≥n ƒÉn c√≥ calo th·∫•p nh·∫•t."""
    if not data["mon_an"]:
        print(" Kh√¥ng c√≥ m√≥n.")
        return
    mon_nhe = min(data["mon_an"].values(), key=lambda m: m["Calo"])
    print(f" M√≥n √≠t calo nh·∫•t: {mon_nhe['Ten']} ({mon_nhe['Calo']} calo)")


def them_thuc_don(data):
    """Th√™m m·ªôt th·ª±c ƒë∆°n m·ªõi."""
    print("\n TH√äM TH·ª∞C ƒê∆†N")
    ma = input("M√£ th·ª±c ƒë∆°n: ").strip().upper()
    if ma in data["thuc_don"]:
        print(" Th·ª±c ƒë∆°n ƒë√£ t·ªìn t·∫°i.")
        return
    ten = input("T√™n th·ª±c ƒë∆°n: ").strip()
    danh_sach = input("Nh·∫≠p danh s√°ch m√£ m√≥n (c√°ch nhau b·∫±ng d·∫•u ph·∫©y): ").split(',')
    danh_sach = [m.strip().upper() for m in danh_sach]
    tong_calo = sum(data["mon_an"].get(m, {"Calo": 0})["Calo"] for m in danh_sach)
    data["thuc_don"][ma] = {"Ten_thuc_don": ten, "Danh_sach_mon": danh_sach, "Tong_calo": tong_calo}
    print(" ƒê√£ th√™m th·ª±c ƒë∆°n.")

def xem_thuc_don(data):
    """Xem t·∫•t c·∫£ th·ª±c ƒë∆°n."""
    print("\n DANH S√ÅCH TH·ª∞C ƒê∆†N")
    for ma, td in data["thuc_don"].items():
        print(f"{ma}: {td['Ten_thuc_don']} ({td['Tong_calo']} calo)")
        for ma_mon in td["Danh_sach_mon"]:
            mon = data["mon_an"].get(ma_mon, {"Ten": "Kh√¥ng r√µ", "Calo": 0})
            print(f"   ‚Ä¢ {ma_mon} - {mon['Ten']} ({mon['Calo']} calo)")

def sua_thuc_don(data):
    """S·ª≠a th√¥ng tin th·ª±c ƒë∆°n."""
    ma = input("M√£ th·ª±c ƒë∆°n c·∫ßn s·ª≠a: ").strip().upper()
    if ma not in data["thuc_don"]:
        print(" Kh√¥ng t√¨m th·∫•y th·ª±c ƒë∆°n.")
        return
    ten = input("T√™n m·ªõi: ").strip()
    danh_sach = input("Danh s√°ch m√≥n m·ªõi: ").split(',')
    danh_sach = [m.strip().upper() for m in danh_sach]
    tong_calo = sum(data["mon_an"].get(m, {"Calo": 0})["Calo"] for m in danh_sach)
    data["thuc_don"][ma] = {"Ten_thuc_don": ten, "Danh_sach_mon": danh_sach, "Tong_calo": tong_calo}
    print(" ƒê√£ s·ª≠a th·ª±c ƒë∆°n.")

def xoa_thuc_don(data):
    """Xo√° m·ªôt th·ª±c ƒë∆°n."""
    ma = input("M√£ th·ª±c ƒë∆°n c·∫ßn xo√°: ").strip().upper()
    if ma in data["thuc_don"]:
        del data["thuc_don"][ma]
        print(" ƒê√£ xo√° th·ª±c ƒë∆°n.")
    else:
        print(" Kh√¥ng t√¨m th·∫•y.")

def tim_thuc_don_theo_ten(data):
    """T√¨m th·ª±c ƒë∆°n theo t√™n."""
    tu_khoa = input("Nh·∫≠p t√™n th·ª±c ƒë∆°n: ").strip().lower()
    for td in data["thuc_don"].values():
        if tu_khoa in td["Ten_thuc_don"].lower():
            print(f" {td['Ten_thuc_don']} ({td['Tong_calo']} calo)")

def xem_tong_calo(data):
    """Xem t·ªïng calo c·ªßa m·ªôt th·ª±c ƒë∆°n."""
    ma = input("M√£ th·ª±c ƒë∆°n: ").strip().upper()
    if ma in data["thuc_don"]:
        print(f"T·ªïng calo: {data['thuc_don'][ma]['Tong_calo']} calo")
    else:
        print(" Kh√¥ng t√¨m th·∫•y.")

def mon_calo_cao(data):
    """Hi·ªÉn th·ªã m√≥n c√≥ calo l·ªõn h∆°n 500"""
    print("\nüìç M√ìN ƒÇN NHI·ªÄU CALO (>500)")
    cao = [mon for mon in data["mon_an"].values() if mon["Calo"] > 500]
    if not cao:
        print("Kh√¥ng c√≥ m√≥n n√†o calo cao.")
    else:
        for mon in cao:
            print(f"üçñ {mon['Ten']} - {mon['Calo']} calo | {mon['Loai']}")


def thong_ke_loai_mon(data):
    """Th·ªëng k√™ s·ªë l∆∞·ª£ng m√≥n theo t·ª´ng lo·∫°i"""
    print("\nüìä TH·ªêNG K√ä M√ìN ƒÇN THEO LO·∫†I")
    thong_ke = {}
    for mon in data["mon_an"].values():
        loai = mon["Loai"]
        thong_ke[loai] = thong_ke.get(loai, 0) + 1
    for loai, so_luong in thong_ke.items():
        print(f"‚Ä¢ {loai}: {so_luong} m√≥n")


def thuc_don_nhieu_calo(data):
    """Hi·ªÉn th·ªã th·ª±c ƒë∆°n c√≥ nhi·ªÅu calo nh·∫•t"""
    if not data["thuc_don"]:
        print("Kh√¥ng c√≥ th·ª±c ƒë∆°n.")
        return
    td_max = max(data["thuc_don"].values(), key=lambda td: td["Tong_calo"])
    print(f"\nüî• Th·ª±c ƒë∆°n nhi·ªÅu calo nh·∫•t: {td_max['Ten_thuc_don']} ({td_max['Tong_calo']} calo)")
    for ma in td_max["Danh_sach_mon"]:
        mon = data["mon_an"].get(ma, {"Ten": "Kh√¥ng r√µ", "Calo": 0})
        print(f"   ‚Ä¢ {ma} - {mon['Ten']} ({mon['Calo']} calo)")


def dem_tong_mon_an(data):
    """ƒê·∫øm t·ªïng s·ªë l∆∞·ª£ng m√≥n ƒÉn hi·ªán c√≥"""
    print(f"\nüßÆ T·ªïng s·ªë m√≥n ƒÉn ƒë√£ l∆∞u: {len(data['mon_an'])} m√≥n")


def xuat_file_txt(data):
    """Xu·∫•t d·ªØ li·ªáu ra file txt d·ªÖ ƒë·ªçc"""
    with open("xuat_du_lieu.txt", "w", encoding="utf-8") as f:
        f.write("====== DANH S√ÅCH M√ìN ƒÇN ======\n")
        for ma, mon in data["mon_an"].items():
            f.write(f"{ma}: {mon['Ten']} | {mon['Calo']} calo | {mon['Loai']}\n")

        f.write("\n====== DANH S√ÅCH TH·ª∞C ƒê∆†N ======\n")
        for ma, td in data["thuc_don"].items():
            f.write(f"{ma}: {td['Ten_thuc_don']} ({td['Tong_calo']} calo)\n")
            for ma_mon in td["Danh_sach_mon"]:
                mon = data["mon_an"].get(ma_mon, {"Ten": "Kh√¥ng r√µ", "Calo": 0})
                f.write(f"   ‚Ä¢ {ma_mon} - {mon['Ten']} ({mon['Calo']} calo)\n")

    print("üìÑ ƒê√£ xu·∫•t ra file 'xuat_du_lieu.txt'")


def menu():
    ten_file = "du_lieu.json"
    data = doc_file(ten_file)

    while True:
        print("1. Th√™m m√≥n ƒÉn")
        print("2. Xem danh s√°ch m√≥n ƒÉn")
        print("3. S·ª≠a m√≥n ƒÉn")
        print("4. Xo√° m√≥n ƒÉn")
        print("5. T√¨m m√≥n ƒÉn theo t√™n")
        print("6. T√¨m m√≥n ƒÉn theo lo·∫°i")
        print("7. M√≥n ƒÉn √≠t calo nh·∫•t")
        print("8. Th√™m th·ª±c ƒë∆°n")
        print("9. Xem danh s√°ch th·ª±c ƒë∆°n")
        print("10. S·ª≠a th·ª±c ƒë∆°n")
        print("11. Xo√° th·ª±c ƒë∆°n")
        print("12. T√¨m th·ª±c ƒë∆°n theo t√™n")
        print("13. Xem t·ªïng calo th·ª±c ƒë∆°n")
        print("14. L∆∞u d·ªØ li·ªáu")
        print("15. Tho√°t")
        print("16. M√≥n ƒÉn nhi·ªÅu calo (>500)")             
        print("17. Th·ªëng k√™ m√≥n ƒÉn theo lo·∫°i")            
        print("18. Th·ª±c ƒë∆°n nhi·ªÅu calo nh·∫•t")            
        print("19. ƒê·∫øm t·ªïng s·ªë m√≥n ƒÉn")                 
        print("20. Xu·∫•t ra file TXT")                     

        chon = input(" Ch·ªçn ch·ª©c nƒÉng (1-20): ").strip()

        if chon == '1': them_mon_an(data)
        elif chon == '2': xem_mon_an(data)
        elif chon == '3': sua_mon_an(data)
        elif chon == '4': xoa_mon_an(data)
        elif chon == '5': tim_mon_theo_ten(data)
        elif chon == '6': tim_mon_theo_loai(data)
        elif chon == '7': mon_it_calo_nhat(data)
        elif chon == '8': them_thuc_don(data)
        elif chon == '9': xem_thuc_don(data)
        elif chon == '10': sua_thuc_don(data)
        elif chon == '11': xoa_thuc_don(data)
        elif chon == '12': tim_thuc_don_theo_ten(data)
        elif chon == '13': xem_tong_calo(data)
        elif chon == '14': ghi_file(ten_file, data); print("üíæ ƒê√£ l∆∞u.")
        elif chon == '16': mon_calo_cao(data)
        elif chon == '17': thong_ke_loai_mon(data)
        elif chon == '18': thuc_don_nhieu_calo(data)
        elif chon == '19': dem_tong_mon_an(data)
        elif chon == '20': xuat_file_txt(data)
        elif chon == '15': 
            ghi_file(ten_file, data)
            print(" ƒê√£ tho√°t ch∆∞∆°ng tr√¨nh.")
            break
        else:
            print(" L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")


if __name__ == "__main__":
    menu()